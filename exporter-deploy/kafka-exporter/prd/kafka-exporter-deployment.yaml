apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    k8s-app: kafka-exporter
    target-instance-id: alihn1-prd-kafka-01
  name:  alihn1-prd-kafka-01-metrics
  namespace: monitoring
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kafka-exporter
      target-instance-id: alihn1-prd-kafka-01
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9308"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        k8s-app: kafka-exporter
        target-instance-id: alihn1-prd-kafka-01
      name:  alihn1-prd-kafka-01-metrics
      namespace: monitoring
    spec:
      containers:
      - args:
        - --kafka.server=172.18.30.110:9092
        - --zookeeper.server=172.18.30.110:2181
        image: danielqsj/kafka-exporter:latest
        imagePullPolicy: IfNotPresent
        name: kafka-exporter
        ports:
        - containerPort: 9308
          name: kafka-exporter
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
